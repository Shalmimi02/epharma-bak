{"version":3,"file":"js/612.e4fe133f.js","mappings":"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","sources":["webpack://epharma/./src/views/stock/bases_de_donnees/ExcelImportBdd.vue","webpack://epharma/./src/views/stock/bases_de_donnees/ExcelImportBdd.vue?6adf"],"sourcesContent":["<template>\n    <p>Pour que l'importation fonctionne, la première ligne qui correspond aux entetes de votre tableau doit contenir\n        les noms des colonnes suivant ecrit de la meme maniere peu importe l'ordre <b>sans espace svp</b>. </p>\n        <!-- Div déroulante pour afficher la réponse de l'importation -->\n        <transition name=\"slide-down\">\n            <div v-if=\"showResponse\" class=\"import-response danger\">\n                <h3>Résultat de l'importation</h3>\n                <p><strong>Nombre total de produits importés :</strong> {{ importResponse.data.nb_importations }}</p>\n                <p><strong>Nombre de produits ignorés :</strong> {{ importResponse.data.nb_importations_ignores }}</p>\n                \n                <div v-if=\"importResponse.data.importations_ignores.length > 0\">\n                    <p><strong>Liste des produits ignorés :</strong></p>\n                    <ul>\n                        <li v-for=\"(item, index) in importResponse.data.importations_ignores\" :key=\"index\">\n                            {{ item }}\n                        </li>\n                    </ul>\n                </div>\n                <div v-else>\n                    <p>Aucun produit ignoré.</p>\n                </div>\n            </div>\n        </transition>\n    <div class=\"card card-body overflow-auto p-0 mb-3\">\n        <table class=\"table table-bordered overflow-auto\">\n            <thead>\n                <tr class=\"bg-danger text-white\">\n                    <th scope=\"col\">1</th>\n                    <th scope=\"col\">libelle</th>\n                    <th scope=\"col\">forme</th>\n                    <th scope=\"col\">prix_achat</th>\n                    <th scope=\"col\">prix_de_vente</th>\n                    <th scope=\"col\">coef_conversion_de_prix_vente_achat</th>\n                    <th scope=\"col\">tva</th>\n                    <th scope=\"col\">css</th>\n                    <th scope=\"col\">nature</th>\n                    <th scope=\"col\">categorie</th>\n                    <th scope=\"col\">cip</th>\n                    <th scope=\"col\">cip_deux</th>\n                    <th scope=\"col\">statut</th>\n                    <th scope=\"col\">dci</th>\n                    <th scope=\"col\">code_table</th>\n                    <th scope=\"col\">hauteur</th>\n                    <th scope=\"col\">largeur</th>\n                    <th scope=\"col\">longueur</th>\n                    <th scope=\"col\">poids</th>\n                    <th scope=\"col\">classe_therapeutique</th>\n                    <th scope=\"col\">qte</th>\n                    <th scope=\"col\">qte_min</th>\n                    <th scope=\"col\">qte_max</th>\n                    <th scope=\"col\">photo</th>\n                    <th scope=\"col\">posologie</th>\n                    <th scope=\"col\">description</th>\n                    <th scope=\"col\">homologation</th>\n                    <th scope=\"col\">rayon</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th>2</th>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                    <td>XXXXXXX</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <!-- Bouton de téléchargement -->\n    <div class=\"text-center mt-3\">\n            <a href=\"/BASE DE DONNEES EPHARMA2024 OK.xlsx\" download class=\"btn btn-secondary\">\n                Télécharger l'exemple\n            </a>\n    </div>\n    <p class=\"text-center\">Les produits avec une quantité (qte) supériéure à 0 seront automatiquement activés dans les\n        produits</p>\n    <form @submit.prevent=\"runImport\" class=\"col-md-10 mx-auto\">\n        <div class=\"form-group\">\n            <label>Votre fichier excel doit avoir l'extension <span class=\"text-danger\">.xlsx</span></label>\n            <!-- <input type=\"file\" ref=\"fichier\" accept=\".xlsx\" v-on:change=\"handleFileChange()\"\n                required> -->\n                <input class=\"form-control\" type=\"file\" @change=\"handleFileChange\" ref=\"fileInput\"/>\n        </div>\n        <button v-if=\"excelData.length\" type=\"submit\" class=\"btn btn-primary btn-block\" :disabled=\"isLoading\">\n            <div v-if=\"isLoading == true\">\n                Importation en cours\n                <span class=\"spinner-border spinner-border-sm mx-2\" role=\"status\" aria-hidden=\"true\"></span>\n            </div>\n            <spa v-else>Démarrer</spa>\n        </button>\n\n        <!-- <pre v-if=\"formattedJson\">{{ formattedJson }}</pre> -->\n    </form>\n</template>\n<script>\nimport $ from 'jquery'\nimport * as XLSX from \"xlsx\";\n\nexport default {\n    inject: ['dialogRef'],\n    data() {\n        return {\n            isLoading: false,\n            excelData: [], // Pour stocker les données Excel avec en-tête\n            showResponse: false,        // Contrôle la visibilité de la div\n            importResponse: {}       // Stocke la réponse de l'importation\n            // form: {\n            //     is_active: false\n            // }\n        }\n    },\n    computed: {\n        formattedJson() {\n            return JSON.stringify(this.excelData, null, 2);\n        },\n    },\n    methods: {\n        handleFileChange(event) {\n            const file = event.target.files[0];\n            if (file) {\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    const data = new Uint8Array(e.target.result);\n                    const workbook = XLSX.read(data, { type: \"array\" });\n                    const firstSheetName = workbook.SheetNames[0];\n                    const worksheet = workbook.Sheets[firstSheetName];\n\n                    const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n                    const headers = jsonData[0];\n                    const rows = jsonData.slice(1);\n\n                    this.excelData = rows.map(row => {\n                        const rowData = {};\n                        headers.forEach((header, index) => {\n                            rowData[header] = row[index];\n                        });\n                        return rowData;\n                    });\n                };\n                reader.readAsArrayBuffer(file);\n            }\n        },\n        runImport() {\n            this.isLoading = true\n            this.axios.post('/api/produits/import-excel', { produits: this.excelData }).then(response => {\n                this.isLoading = false\n                if (response.data.success === true) {\n                    this.excelData =[]\n                     // Réinitialiser l'input de fichier\n                     if (this.$refs.fileInput) {\n                        this.$refs.fileInput.value = null;\n                    }\n                    $('#refreshproduits').click()\n                    this.$toast.add({\n                        severity: 'success',\n                        detail: 'Importation réussie',\n                        life: 3000\n                    });\n                    // this.dialogRef.close()\n                    \n                    // Mise à jour de importResponse avec les données reçues\n                    \n                    this.importResponse = response.data;\n                    this.showResponse = true;\n                }\n                else {\n                    response.data.errors.forEach(element => {\n                        this.$toast.add({\n                            severity: 'warn',\n                            summary: 'Oups !',\n                            detail: element,\n                            life: 7000\n                        });\n                    });\n                }\n            }).catch(() => {\n                this.isLoading = false\n                this.$toast.add({\n                    severity: 'error',\n                    summary: 'Probleme de connexion',\n                    detail: 'Une erreur s\\'est produite lors de la connexion au serveur !',\n                    life: 5000\n                });\n            })\n        },\n        // resetForm() {\n        //     this.form = {\n        //         is_active: false\n        //     }\n        // }\n    }\n}\n</script>\n\n<style scoped>\npre {\n    background-color: #f4f4f4;\n    padding: 15px;\n    border-radius: 4px;\n    max-height: 400px;\n    overflow: auto;\n}\n/* Animation de glissement vers le bas */\n.slide-down-enter-active {\n    transition: max-height 0.5s ease-out, opacity 0.5s ease-out;\n}\n.slide-down-leave-active {\n    transition: max-height 0.5s ease-in, opacity 0.5s ease-in;\n}\n.slide-down-enter-from,\n.slide-down-leave-to {\n    max-height: 0;\n    opacity: 0;\n}\n.slide-down-enter-to,\n.slide-down-leave-from {\n    max-height: 500px; /* Ajustez selon vos besoins */\n    opacity: 1;\n}\n\n/* Styles pour la div de réponse */\n.import-response {\n    background-color: #f8f9fa;\n    border: 1px solid #ced4da;\n    padding: 15px;\n    margin-bottom: 20px;\n    border-radius: 5px;\n    overflow-y: auto;\n    max-height: 200px; /* Hauteur maximale pour le défilement */\n}\n\n.import-response ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n}\n\n.import-response li {\n    padding: 5px 0;\n    border-bottom: 1px solid #e9ecef;\n}\n\n.import-response li:last-child {\n    border-bottom: none;\n}\n</style>","import { render } from \"./ExcelImportBdd.vue?vue&type=template&id=2b431b86&scoped=true\"\nimport script from \"./ExcelImportBdd.vue?vue&type=script&lang=js\"\nexport * from \"./ExcelImportBdd.vue?vue&type=script&lang=js\"\n\nimport \"./ExcelImportBdd.vue?vue&type=style&index=0&id=2b431b86&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2b431b86\"]])\n\nexport default __exports__"],"names":["_createElementVNode","_createTextVNode","key","class","_hoisted_9","_createStaticVNode","role","_createElementBlock","_Fragment","_hoisted_1","_createVNode","_Transition","name","_withCtx","$data","showResponse","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","importResponse","data","nb_importations","_hoisted_5","nb_importations_ignores","importations_ignores","length","_hoisted_6","_hoisted_7","_renderList","item","index","_hoisted_8","_hoisted_10","_createCommentVNode","_","_hoisted_11","onSubmit","_cache","_withModifiers","$options","runImport","apply","arguments","_hoisted_14","_hoisted_15","type","onChange","handleFileChange","ref","excelData","disabled","isLoading","_hoisted_17","_hoisted_18","_createBlock","_component_spa","_hoisted_16","inject","computed","formattedJson","JSON","stringify","this","methods","event","_this","file","target","files","reader","FileReader","onload","e","Uint8Array","result","workbook","XLSX","firstSheetName","SheetNames","worksheet","Sheets","jsonData","sheet_to_json","header","headers","rows","slice","map","row","rowData","forEach","readAsArrayBuffer","_this2","axios","post","produits","then","response","success","$refs","fileInput","value","$","click","$toast","add","severity","detail","life","errors","element","summary","__exports__","render"],"sourceRoot":""}